{"ast":null,"code":"var _jsxFileName = \"E:\\\\Campusconnect\\\\frontend\\\\src\\\\Pages\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { backendUrl } from \"../exports\";\nimport Navbar from \"../Components/Navbar\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const {\n    chatId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [empty, setEmpty] = useState(false);\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      try {\n        const response = await fetch(`${backendUrl}userprofile/profile?userId=${chatId}`);\n        const data = await response.json();\n        setUserName(data.userProfile.name);\n      } catch (error) {\n        console.error(\"Error fetching user profile:\", error);\n      }\n    };\n    fetchUserProfile();\n  }, [chatId]);\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch(`${backendUrl}messaging?userId=${localStorage.getItem(\"userId\")}&receiverId=${chatId}`);\n      const data = await response.json();\n      setMessages(data.messages);\n    } catch (error) {\n      console.error(\"Error fetching messages:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchMessages();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [chatId]);\n  const sendMessage = async () => {\n    if (newMessage.trim() === \"\") {\n      setEmpty(true);\n    } else {\n      try {\n        const response = await fetch(`${backendUrl}messaging/send`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            userId: localStorage.getItem(\"userId\"),\n            receiverId: chatId,\n            content: newMessage\n          })\n        });\n        if (response.ok) {\n          setNewMessage(\"\");\n          fetchMessages();\n        } else {\n          console.error(\"Failed to send message:\", response.statusText);\n        }\n      } catch (error) {\n        console.error(\"Error sending message:\", error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heading\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Chat with \", userName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"maincontent\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-container\",\n          children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.sender_id.toString() === localStorage.getItem(\"userId\").toString() ? \"sent\" : \"received\"}`,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), empty && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: \"Message cannot be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Chat, \"fYC+Um37Y4XiFtVb5+FTBLfg/IE=\", false, function () {\n  return [useParams];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useParams","backendUrl","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","chatId","messages","setMessages","newMessage","setNewMessage","userName","setUserName","empty","setEmpty","fetchUserProfile","response","fetch","data","json","userProfile","name","error","console","fetchMessages","localStorage","getItem","sendMessage","trim","method","headers","body","JSON","stringify","userId","receiverId","content","ok","statusText","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","message","index","sender_id","toString","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["E:/Campusconnect/frontend/src/Pages/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { backendUrl } from \"../exports\";\r\nimport Navbar from \"../Components/Navbar\";\r\n\r\nconst Chat = () => {\r\n  const { chatId } = useParams();\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [empty, setEmpty] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchUserProfile = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `${backendUrl}userprofile/profile?userId=${chatId}`\r\n        );\r\n        const data = await response.json();\r\n        setUserName(data.userProfile.name);\r\n      } catch (error) {\r\n        console.error(\"Error fetching user profile:\", error);\r\n      }\r\n    };\r\n\r\n    fetchUserProfile();\r\n  }, [chatId]);\r\n\r\n  const fetchMessages = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `${backendUrl}messaging?userId=${localStorage.getItem(\r\n          \"userId\"\r\n        )}&receiverId=${chatId}`\r\n      );\r\n      const data = await response.json();\r\n      setMessages(data.messages);\r\n    } catch (error) {\r\n      console.error(\"Error fetching messages:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [chatId]);\r\n\r\n  const sendMessage = async () => {\r\n    if (newMessage.trim() === \"\") {\r\n      setEmpty(true);\r\n    } else {\r\n      try {\r\n        const response = await fetch(`${backendUrl}messaging/send`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            userId: localStorage.getItem(\"userId\"),\r\n            receiverId: chatId,\r\n            content: newMessage,\r\n          }),\r\n        });\r\n        if (response.ok) {\r\n          setNewMessage(\"\");\r\n          fetchMessages();\r\n        } else {\r\n          console.error(\"Failed to send message:\", response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error sending message:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"chat-page\">\r\n        <div className=\"heading\">\r\n          <h2>Chat with {userName}</h2>\r\n        </div>\r\n        <div className=\"maincontent\">\r\n        <div className=\"messages-container\">\r\n          {messages.map((message, index) => (\r\n            <div\r\n              key={index}\r\n              className={`message ${\r\n                message.sender_id.toString() ===\r\n                localStorage.getItem(\"userId\").toString()\r\n                  ? \"sent\"\r\n                  : \"received\"\r\n              }`}\r\n            >\r\n              <p>{message.content}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <textarea\r\n            value={newMessage}\r\n            onChange={(e) => setNewMessage(e.target.value)}\r\n            placeholder=\"Type your message...\"\r\n          />\r\n          {empty && <p className=\"error\">Message cannot be empty</p>}\r\n          <button onClick={sendMessage}>Send</button>\r\n        </div>\r\n        \r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}