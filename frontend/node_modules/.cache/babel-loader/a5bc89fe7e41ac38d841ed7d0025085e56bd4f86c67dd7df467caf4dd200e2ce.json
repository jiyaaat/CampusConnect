{"ast":null,"code":"var _jsxFileName = \"E:\\\\Campusconnect\\\\frontend\\\\src\\\\Pages\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { backendUrl } from \"../exports\";\nimport TokenVerification from \"../Hooks/TokenVerification\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [resetToken, setResetToken] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [resetTokenInput, setResetTokenInput] = useState(false);\n  const {\n    isLoading,\n    isLoggedIn\n  } = TokenVerification();\n  if (isLoggedIn) {\n    window.location.href = \"/\";\n    return null;\n  }\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n  const handleForgotPassword = async () => {\n    try {\n      const response = await fetch(`${backendUrl}auth/forgot-password`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setSuccessMessage(data.message);\n        setError(\"\");\n        setResetTokenInput(true);\n      } else {\n        setError(data.error);\n        setSuccessMessage(\"\");\n      }\n    } catch (error) {\n      console.error(\"Forgot password error:\", error);\n      setError(\"An error occurred while resetting password\");\n    }\n  };\n  const handleResetPassword = async () => {\n    try {\n      const response = await fetch(`${backendUrl}auth/reset-password`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          token: resetToken,\n          newPassword\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setSuccessMessage(data.message);\n        setError(\"\");\n      } else {\n        setError(data.error);\n        setSuccessMessage(\"\");\n      }\n    } catch (error) {\n      console.error(\"Reset password error:\", error);\n      setError(\"An error occurred while resetting password\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Forgot Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Enter your email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), resetTokenInput && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Reset Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: resetToken,\n          onChange: e => setResetToken(e.target.value),\n          placeholder: \"Enter the reset token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          placeholder: \"Enter your new password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 26\n    }, this), !resetTokenInput && /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleForgotPassword,\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }, this), resetTokenInput && /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleResetPassword,\n      children: \"Submit New Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Remembered your password? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"PwUxdtZVYOUW4zcDQhxfkIvtTUs=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","Link","backendUrl","TokenVerification","jsxDEV","_jsxDEV","Fragment","_Fragment","ForgotPassword","_s","email","setEmail","resetToken","setResetToken","newPassword","setNewPassword","error","setError","successMessage","setSuccessMessage","resetTokenInput","setResetTokenInput","isLoading","isLoggedIn","window","location","href","children","fileName","_jsxFileName","lineNumber","columnNumber","handleForgotPassword","response","fetch","method","headers","body","JSON","stringify","data","json","ok","message","console","handleResetPassword","token","className","type","value","onChange","e","target","placeholder","onClick","to","_c","$RefreshReg$"],"sources":["E:/Campusconnect/frontend/src/Pages/ForgotPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { backendUrl } from \"../exports\";\r\nimport TokenVerification from \"../Hooks/TokenVerification\";\r\n\r\nconst ForgotPassword = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [resetToken, setResetToken] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [resetTokenInput, setResetTokenInput] = useState(false);\r\n  const { isLoading, isLoggedIn } = TokenVerification();\r\n\r\n  if (isLoggedIn) {\r\n    window.location.href = \"/\";\r\n    return null;\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const handleForgotPassword = async () => {\r\n    try {\r\n      const response = await fetch(`${backendUrl}auth/forgot-password`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setSuccessMessage(data.message);\r\n        setError(\"\");\r\n        setResetTokenInput(true);\r\n      } else {\r\n        setError(data.error);\r\n        setSuccessMessage(\"\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Forgot password error:\", error);\r\n      setError(\"An error occurred while resetting password\");\r\n    }\r\n  };\r\n\r\n  const handleResetPassword = async () => {\r\n    try {\r\n      const response = await fetch(`${backendUrl}auth/reset-password`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ token: resetToken, newPassword }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setSuccessMessage(data.message);\r\n        setError(\"\");\r\n      } else {\r\n        setError(data.error);\r\n        setSuccessMessage(\"\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Reset password error:\", error);\r\n      setError(\"An error occurred while resetting password\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth\">\r\n      <h2>Forgot Password</h2>\r\n      <div className=\"form-group\">\r\n        <label>Email</label>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Enter your email\"\r\n        />\r\n      </div>\r\n      {resetTokenInput && (\r\n        <>\r\n          <div className=\"form-group\">\r\n            <label>Reset Token</label>\r\n            <input\r\n              type=\"text\"\r\n              value={resetToken}\r\n              onChange={(e) => setResetToken(e.target.value)}\r\n              placeholder=\"Enter the reset token\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>New Password</label>\r\n            <input\r\n              type=\"password\"\r\n              value={newPassword}\r\n              onChange={(e) => setNewPassword(e.target.value)}\r\n              placeholder=\"Enter your new password\"\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n      {successMessage && <p className=\"success\">{successMessage}</p>}\r\n      {!resetTokenInput && (\r\n        <button type=\"button\" onClick={handleForgotPassword}>\r\n          Reset Password\r\n        </button>\r\n      )}\r\n      {error && <p className=\"error\">{error}</p>}\r\n      {resetTokenInput && (\r\n        <button type=\"button\" onClick={handleResetPassword}>\r\n          Submit New Password\r\n        </button>\r\n      )}\r\n      <div>\r\n        <p>\r\n          Remembered your password? <Link to=\"/login\">Login</Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}