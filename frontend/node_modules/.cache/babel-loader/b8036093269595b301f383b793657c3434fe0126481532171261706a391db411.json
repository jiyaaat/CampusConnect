{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.Splitting = factory();\n})(this, function () {\n  'use strict';\n\n  var root = document;\n  var createText = root.createTextNode.bind(root);\n\n  /**\n   * # setProperty\n   * Apply a CSS var\n   * @param el{HTMLElement} \n   * @param varName {string} \n   * @param value {string|number}  \n   */\n  function setProperty(el, varName, value) {\n    el.style.setProperty(varName, value);\n  }\n\n  /**\n   * \n   * @param {Node} el \n   * @param {Node} child \n   */\n  function appendChild(el, child) {\n    return el.appendChild(child);\n  }\n  function createElement(parent, key, text, whitespace) {\n    var el = root.createElement('span');\n    key && (el.className = key);\n    if (text) {\n      !whitespace && el.setAttribute(\"data-\" + key, text);\n      el.textContent = text;\n    }\n    return parent && appendChild(parent, el) || el;\n  }\n  function getData(el, key) {\n    return el.getAttribute(\"data-\" + key);\n  }\n\n  /**\n   * \n   * @param e {import('../types').Target} \n   * @param parent {HTMLElement}\n   * @returns {HTMLElement[]}\n   */\n  function $(e, parent) {\n    return !e || e.length == 0 ?\n    // null or empty string returns empty array\n    [] : e.nodeName ?\n    // a single element is wrapped in an array\n    [e] :\n    // selector and NodeList are converted to Element[]\n    [].slice.call(e[0].nodeName ? e : (parent || root).querySelectorAll(e));\n  }\n\n  /**\n   * Creates and fills an array with the value provided\n   * @template {T}\n   * @param {number} len\n   * @param {() => T} valueProvider\n   * @return {T}\n   */\n  function Array2D(len) {\n    var a = [];\n    for (; len--;) {\n      a[len] = [];\n    }\n    return a;\n  }\n  function each(items, fn) {\n    items && items.some(fn);\n  }\n  function selectFrom(obj) {\n    return function (key) {\n      return obj[key];\n    };\n  }\n\n  /**\n   * # Splitting.index\n   * Index split elements and add them to a Splitting instance.\n   *\n   * @param element {HTMLElement}\n   * @param key {string}\n   * @param items {HTMLElement[] | HTMLElement[][]}\n   */\n  function index(element, key, items) {\n    var prefix = '--' + key;\n    var cssVar = prefix + \"-index\";\n    each(items, function (items, i) {\n      if (Array.isArray(items)) {\n        each(items, function (item) {\n          setProperty(item, cssVar, i);\n        });\n      } else {\n        setProperty(items, cssVar, i);\n      }\n    });\n    setProperty(element, prefix + \"-total\", items.length);\n  }\n\n  /**\n   * @type {Record<string, import('./types').ISplittingPlugin>}\n   */\n  var plugins = {};\n\n  /**\n   * @param by {string}\n   * @param parent {string}\n   * @param deps {string[]}\n   * @return {string[]}\n   */\n  function resolvePlugins(by, parent, deps) {\n    // skip if already visited this dependency\n    var index = deps.indexOf(by);\n    if (index == -1) {\n      // if new to dependency array, add to the beginning\n      deps.unshift(by);\n\n      // recursively call this function for all dependencies\n      each(plugins[by].depends, function (p) {\n        resolvePlugins(p, by, deps);\n      });\n    } else {\n      // if this dependency was added already move to the left of\n      // the parent dependency so it gets loaded in order\n      var indexOfParent = deps.indexOf(parent);\n      deps.splice(index, 1);\n      deps.splice(indexOfParent, 0, by);\n    }\n    return deps;\n  }\n\n  /**\n   * Internal utility for creating plugins... essentially to reduce\n   * the size of the library\n   * @param {string} by \n   * @param {string} key \n   * @param {string[]} depends \n   * @param {Function} split \n   * @returns {import('./types').ISplittingPlugin}\n   */\n  function createPlugin(by, depends, key, split) {\n    return {\n      by: by,\n      depends: depends,\n      key: key,\n      split: split\n    };\n  }\n\n  /**\n   *\n   * @param by {string}\n   * @returns {import('./types').ISplittingPlugin[]}\n   */\n  function resolve(by) {\n    return resolvePlugins(by, 0, []).map(selectFrom(plugins));\n  }\n\n  /**\n   * Adds a new plugin to splitting\n   * @param opts {import('./types').ISplittingPlugin}\n   */\n  function add(opts) {\n    plugins[opts.by] = opts;\n  }\n\n  /**\n   * # Splitting.split\n   * Split an element's textContent into individual elements\n   * @param el {Node} Element to split\n   * @param key {string}\n   * @param splitOn {string}\n   * @param includeSpace {boolean}\n   * @returns {HTMLElement[]}\n   */\n  function splitText(el, key, splitOn, includePrevious, preserveWhitespace) {\n    // Combine any strange text nodes or empty whitespace.\n    el.normalize();\n\n    // Use fragment to prevent unnecessary DOM thrashing.\n    var elements = [];\n    var F = document.createDocumentFragment();\n    if (includePrevious) {\n      elements.push(el.previousSibling);\n    }\n    var allElements = [];\n    $(el.childNodes).some(function (next) {\n      if (next.tagName && !next.hasChildNodes()) {\n        // keep elements without child nodes (no text and no children)\n        allElements.push(next);\n        return;\n      }\n      // Recursively run through child nodes\n      if (next.childNodes && next.childNodes.length) {\n        allElements.push(next);\n        elements.push.apply(elements, splitText(next, key, splitOn, includePrevious, preserveWhitespace));\n        return;\n      }\n\n      // Get the text to split, trimming out the whitespace\n      /** @type {string} */\n      var wholeText = next.wholeText || '';\n      var contents = wholeText.trim();\n\n      // If there's no text left after trimming whitespace, continue the loop\n      if (contents.length) {\n        // insert leading space if there was one\n        if (wholeText[0] === ' ') {\n          allElements.push(createText(' '));\n        }\n        // Concatenate the split text children back into the full array\n        each(contents.split(splitOn), function (splitText, i) {\n          if (i && preserveWhitespace) {\n            allElements.push(createElement(F, \"whitespace\", \" \", preserveWhitespace));\n          }\n          var splitEl = createElement(F, key, splitText);\n          elements.push(splitEl);\n          allElements.push(splitEl);\n        });\n        // insert trailing space if there was one\n        if (wholeText[wholeText.length - 1] === ' ') {\n          allElements.push(createText(' '));\n        }\n      }\n    });\n    each(allElements, function (el) {\n      appendChild(F, el);\n    });\n\n    // Clear out the existing element\n    el.innerHTML = \"\";\n    appendChild(el, F);\n    return elements;\n  }\n\n  /** an empty value */\n  var _ = 0;\n  function copy(dest, src) {\n    for (var k in src) {\n      dest[k] = src[k];\n    }\n    return dest;\n  }\n  var WORDS = 'words';\n  var wordPlugin = createPlugin( /*by: */WORDS, /*depends: */_, /*key: */'word', /*split: */function (el) {\n    return splitText(el, 'word', /\\s+/, 0, 1);\n  });\n  var CHARS = \"chars\";\n  var charPlugin = createPlugin( /*by: */CHARS, /*depends: */[WORDS], /*key: */\"char\", /*split: */function (el, options, ctx) {\n    var results = [];\n    each(ctx[WORDS], function (word, i) {\n      results.push.apply(results, splitText(word, \"char\", \"\", options.whitespace && i));\n    });\n    return results;\n  });\n\n  /**\n   * # Splitting\n   * \n   * @param opts {import('./types').ISplittingOptions} \n   */\n  function Splitting(opts) {\n    opts = opts || {};\n    var key = opts.key;\n    return $(opts.target || '[data-splitting]').map(function (el) {\n      var ctx = el['üçå'];\n      if (!opts.force && ctx) {\n        return ctx;\n      }\n      ctx = el['üçå'] = {\n        el: el\n      };\n      var items = resolve(opts.by || getData(el, 'splitting') || CHARS);\n      var opts2 = copy({}, opts);\n      each(items, function (plugin) {\n        if (plugin.split) {\n          var pluginBy = plugin.by;\n          var key2 = (key ? '-' + key : '') + plugin.key;\n          var results = plugin.split(el, opts2, ctx);\n          key2 && index(el, key2, results);\n          ctx[pluginBy] = results;\n          el.classList.add(pluginBy);\n        }\n      });\n      el.classList.add('splitting');\n      return ctx;\n    });\n  }\n\n  /**\n   * # Splitting.html\n   * \n   * @param opts {import('./types').ISplittingOptions}\n   */\n  function html(opts) {\n    opts = opts || {};\n    var parent = opts.target = createElement();\n    parent.innerHTML = opts.content;\n    Splitting(opts);\n    return parent.outerHTML;\n  }\n  Splitting.html = html;\n  Splitting.add = add;\n  function detectGrid(el, options, side) {\n    var items = $(options.matching || el.children, el);\n    var c = {};\n    each(items, function (w) {\n      var val = Math.round(w[side]);\n      (c[val] || (c[val] = [])).push(w);\n    });\n    return Object.keys(c).map(Number).sort(byNumber).map(selectFrom(c));\n  }\n  function byNumber(a, b) {\n    return a - b;\n  }\n  var linePlugin = createPlugin( /*by: */'lines', /*depends: */[WORDS], /*key: */'line', /*split: */function (el, options, ctx) {\n    return detectGrid(el, {\n      matching: ctx[WORDS]\n    }, 'offsetTop');\n  });\n  var itemPlugin = createPlugin( /*by: */'items', /*depends: */_, /*key: */'item', /*split: */function (el, options) {\n    return $(options.matching || el.children, el);\n  });\n  var rowPlugin = createPlugin( /*by: */'rows', /*depends: */_, /*key: */'row', /*split: */function (el, options) {\n    return detectGrid(el, options, \"offsetTop\");\n  });\n  var columnPlugin = createPlugin( /*by: */'cols', /*depends: */_, /*key: */\"col\", /*split: */function (el, options) {\n    return detectGrid(el, options, \"offsetLeft\");\n  });\n  var gridPlugin = createPlugin( /*by: */'grid', /*depends: */['rows', 'cols']);\n  var LAYOUT = \"layout\";\n  var layoutPlugin = createPlugin( /*by: */LAYOUT, /*depends: */_, /*key: */_, /*split: */function (el, opts) {\n    // detect and set options\n    var rows = opts.rows = +(opts.rows || getData(el, 'rows') || 1);\n    var columns = opts.columns = +(opts.columns || getData(el, 'columns') || 1);\n\n    // Seek out the first <img> if the value is true \n    opts.image = opts.image || getData(el, 'image') || el.currentSrc || el.src;\n    if (opts.image) {\n      var img = $(\"img\", el)[0];\n      opts.image = img && (img.currentSrc || img.src);\n    }\n\n    // add optional image to background\n    if (opts.image) {\n      setProperty(el, \"background-image\", \"url(\" + opts.image + \")\");\n    }\n    var totalCells = rows * columns;\n    var elements = [];\n    var container = createElement(_, \"cell-grid\");\n    while (totalCells--) {\n      // Create a span\n      var cell = createElement(container, \"cell\");\n      createElement(cell, \"cell-inner\");\n      elements.push(cell);\n    }\n\n    // Append elements back into the parent\n    appendChild(el, container);\n    return elements;\n  });\n  var cellRowPlugin = createPlugin( /*by: */\"cellRows\", /*depends: */[LAYOUT], /*key: */\"row\", /*split: */function (el, opts, ctx) {\n    var rowCount = opts.rows;\n    var result = Array2D(rowCount);\n    each(ctx[LAYOUT], function (cell, i, src) {\n      result[Math.floor(i / (src.length / rowCount))].push(cell);\n    });\n    return result;\n  });\n  var cellColumnPlugin = createPlugin( /*by: */\"cellColumns\", /*depends: */[LAYOUT], /*key: */\"col\", /*split: */function (el, opts, ctx) {\n    var columnCount = opts.columns;\n    var result = Array2D(columnCount);\n    each(ctx[LAYOUT], function (cell, i) {\n      result[i % columnCount].push(cell);\n    });\n    return result;\n  });\n  var cellPlugin = createPlugin( /*by: */\"cells\", /*depends: */['cellRows', 'cellColumns'], /*key: */\"cell\", /*split: */function (el, opt, ctx) {\n    // re-index the layout as the cells\n    return ctx[LAYOUT];\n  });\n\n  // install plugins\n  // word/char plugins\n  add(wordPlugin);\n  add(charPlugin);\n  add(linePlugin);\n  // grid plugins\n  add(itemPlugin);\n  add(rowPlugin);\n  add(columnPlugin);\n  add(gridPlugin);\n  // cell-layout plugins\n  add(layoutPlugin);\n  add(cellRowPlugin);\n  add(cellColumnPlugin);\n  add(cellPlugin);\n  return Splitting;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","Splitting","root","document","createText","createTextNode","bind","setProperty","el","varName","value","style","appendChild","child","createElement","parent","key","text","whitespace","className","setAttribute","textContent","getData","getAttribute","$","e","length","nodeName","slice","call","querySelectorAll","Array2D","len","a","each","items","fn","some","selectFrom","obj","index","element","prefix","cssVar","i","Array","isArray","item","plugins","resolvePlugins","by","deps","indexOf","unshift","depends","p","indexOfParent","splice","createPlugin","split","resolve","map","add","opts","splitText","splitOn","includePrevious","preserveWhitespace","normalize","elements","F","createDocumentFragment","push","previousSibling","allElements","childNodes","next","tagName","hasChildNodes","apply","wholeText","contents","trim","splitEl","innerHTML","_","copy","dest","src","k","WORDS","wordPlugin","CHARS","charPlugin","options","ctx","results","word","target","force","opts2","plugin","pluginBy","key2","classList","html","content","outerHTML","detectGrid","side","matching","children","c","w","val","Math","round","Object","keys","Number","sort","byNumber","b","linePlugin","itemPlugin","rowPlugin","columnPlugin","gridPlugin","LAYOUT","layoutPlugin","rows","columns","image","currentSrc","img","totalCells","container","cell","cellRowPlugin","rowCount","result","floor","cellColumnPlugin","columnCount","cellPlugin","opt"],"sources":["E:/Campusconnect/frontend/node_modules/splitting/dist/splitting.js"],"sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.Splitting = factory());\n}(this, (function () { 'use strict';\n\nvar root = document;\nvar createText = root.createTextNode.bind(root);\n\n/**\n * # setProperty\n * Apply a CSS var\n * @param el{HTMLElement} \n * @param varName {string} \n * @param value {string|number}  \n */\nfunction setProperty(el, varName, value) {\n    el.style.setProperty(varName, value);\n} \n\n/**\n * \n * @param {Node} el \n * @param {Node} child \n */\nfunction appendChild(el, child) {\n  return el.appendChild(child);\n}\n\nfunction createElement(parent, key, text, whitespace) {\n  var el = root.createElement('span');\n  key && (el.className = key); \n  if (text) { \n      !whitespace && el.setAttribute(\"data-\" + key, text);\n      el.textContent = text; \n  }\n  return (parent && appendChild(parent, el)) || el;\n}\n\nfunction getData(el, key) {\n  return el.getAttribute(\"data-\" + key)\n}\n\n/**\n * \n * @param e {import('../types').Target} \n * @param parent {HTMLElement}\n * @returns {HTMLElement[]}\n */\nfunction $(e, parent) {\n    return !e || e.length == 0\n        ? // null or empty string returns empty array\n          []\n        : e.nodeName\n            ? // a single element is wrapped in an array\n              [e]\n            : // selector and NodeList are converted to Element[]\n              [].slice.call(e[0].nodeName ? e : (parent || root).querySelectorAll(e));\n}\n\n/**\n * Creates and fills an array with the value provided\n * @template {T}\n * @param {number} len\n * @param {() => T} valueProvider\n * @return {T}\n */\nfunction Array2D(len) {\n    var a = [];\n    for (; len--; ) {\n        a[len] = [];\n    }\n    return a;\n}\n\nfunction each(items, fn) {\n    items && items.some(fn);\n}\n\nfunction selectFrom(obj) {\n    return function (key) {\n        return obj[key];\n    }\n}\n\n/**\n * # Splitting.index\n * Index split elements and add them to a Splitting instance.\n *\n * @param element {HTMLElement}\n * @param key {string}\n * @param items {HTMLElement[] | HTMLElement[][]}\n */\nfunction index(element, key, items) {\n    var prefix = '--' + key;\n    var cssVar = prefix + \"-index\";\n\n    each(items, function (items, i) {\n        if (Array.isArray(items)) {\n            each(items, function(item) {\n                setProperty(item, cssVar, i);\n            });\n        } else {\n            setProperty(items, cssVar, i);\n        }\n    });\n\n    setProperty(element, prefix + \"-total\", items.length);\n}\n\n/**\n * @type {Record<string, import('./types').ISplittingPlugin>}\n */\nvar plugins = {};\n\n/**\n * @param by {string}\n * @param parent {string}\n * @param deps {string[]}\n * @return {string[]}\n */\nfunction resolvePlugins(by, parent, deps) {\n    // skip if already visited this dependency\n    var index = deps.indexOf(by);\n    if (index == -1) {\n        // if new to dependency array, add to the beginning\n        deps.unshift(by);\n\n        // recursively call this function for all dependencies\n        each(plugins[by].depends, function(p) {\n            resolvePlugins(p, by, deps);\n        });\n    } else {\n        // if this dependency was added already move to the left of\n        // the parent dependency so it gets loaded in order\n        var indexOfParent = deps.indexOf(parent);\n        deps.splice(index, 1);\n        deps.splice(indexOfParent, 0, by);\n    }\n    return deps;\n}\n\n/**\n * Internal utility for creating plugins... essentially to reduce\n * the size of the library\n * @param {string} by \n * @param {string} key \n * @param {string[]} depends \n * @param {Function} split \n * @returns {import('./types').ISplittingPlugin}\n */\nfunction createPlugin(by, depends, key, split) {\n    return {\n        by: by,\n        depends: depends,\n        key: key,\n        split: split\n    }\n}\n\n/**\n *\n * @param by {string}\n * @returns {import('./types').ISplittingPlugin[]}\n */\nfunction resolve(by) {\n    return resolvePlugins(by, 0, []).map(selectFrom(plugins));\n}\n\n/**\n * Adds a new plugin to splitting\n * @param opts {import('./types').ISplittingPlugin}\n */\nfunction add(opts) {\n    plugins[opts.by] = opts;\n}\n\n/**\n * # Splitting.split\n * Split an element's textContent into individual elements\n * @param el {Node} Element to split\n * @param key {string}\n * @param splitOn {string}\n * @param includeSpace {boolean}\n * @returns {HTMLElement[]}\n */\nfunction splitText(el, key, splitOn, includePrevious, preserveWhitespace) {\n    // Combine any strange text nodes or empty whitespace.\n    el.normalize();\n\n    // Use fragment to prevent unnecessary DOM thrashing.\n    var elements = [];\n    var F = document.createDocumentFragment();\n\n    if (includePrevious) {\n        elements.push(el.previousSibling);\n    }\n\n    var allElements = [];\n    $(el.childNodes).some(function(next) {\n        if (next.tagName && !next.hasChildNodes()) {\n            // keep elements without child nodes (no text and no children)\n            allElements.push(next);\n            return;\n        }\n        // Recursively run through child nodes\n        if (next.childNodes && next.childNodes.length) {\n            allElements.push(next);\n            elements.push.apply(elements, splitText(next, key, splitOn, includePrevious, preserveWhitespace));\n            return;\n        }\n\n        // Get the text to split, trimming out the whitespace\n        /** @type {string} */\n        var wholeText = next.wholeText || '';\n        var contents = wholeText.trim();\n\n        // If there's no text left after trimming whitespace, continue the loop\n        if (contents.length) {\n            // insert leading space if there was one\n            if (wholeText[0] === ' ') {\n                allElements.push(createText(' '));\n            }\n            // Concatenate the split text children back into the full array\n            each(contents.split(splitOn), function(splitText, i) {\n                if (i && preserveWhitespace) {\n                    allElements.push(createElement(F, \"whitespace\", \" \", preserveWhitespace));\n                }\n                var splitEl = createElement(F, key, splitText);\n                elements.push(splitEl);\n                allElements.push(splitEl);\n            }); \n            // insert trailing space if there was one\n            if (wholeText[wholeText.length - 1] === ' ') {\n                allElements.push(createText(' '));\n            }\n        }\n    });\n\n    each(allElements, function(el) {\n        appendChild(F, el);\n    });\n\n    // Clear out the existing element\n    el.innerHTML = \"\";\n    appendChild(el, F);\n    return elements;\n}\n\n/** an empty value */\nvar _ = 0;\n\nfunction copy(dest, src) {\n    for (var k in src) {\n        dest[k] = src[k];\n    }\n    return dest;\n}\n\nvar WORDS = 'words';\n\nvar wordPlugin = createPlugin(\n    /*by: */ WORDS,\n    /*depends: */ _,\n    /*key: */ 'word', \n    /*split: */ function(el) {\n        return splitText(el, 'word', /\\s+/, 0, 1)\n    }\n);\n\nvar CHARS = \"chars\";\n\nvar charPlugin = createPlugin(\n    /*by: */ CHARS,\n    /*depends: */ [WORDS],\n    /*key: */ \"char\", \n    /*split: */ function(el, options, ctx) {\n        var results = [];\n\n        each(ctx[WORDS], function(word, i) {\n            results.push.apply(results, splitText(word, \"char\", \"\", options.whitespace && i));\n        });\n\n        return results;\n    }\n);\n\n/**\n * # Splitting\n * \n * @param opts {import('./types').ISplittingOptions} \n */\nfunction Splitting (opts) {\n  opts = opts || {};\n  var key = opts.key;\n\n  return $(opts.target || '[data-splitting]').map(function(el) {\n    var ctx = el['üçå'];  \n    if (!opts.force && ctx) {\n      return ctx;\n    }\n\n    ctx = el['üçå'] = { el: el };\n    var items = resolve(opts.by || getData(el, 'splitting') || CHARS);\n    var opts2 = copy({}, opts);\n    each(items, function(plugin) {\n      if (plugin.split) {\n        var pluginBy = plugin.by;\n        var key2 = (key ? '-' + key : '') + plugin.key;\n        var results = plugin.split(el, opts2, ctx);\n        key2 && index(el, key2, results);\n        ctx[pluginBy] = results;\n        el.classList.add(pluginBy);\n      } \n    });\n\n    el.classList.add('splitting');\n    return ctx;\n  })\n}\n\n/**\n * # Splitting.html\n * \n * @param opts {import('./types').ISplittingOptions}\n */\nfunction html(opts) {\n  opts = opts || {};\n  var parent = opts.target =  createElement();\n  parent.innerHTML = opts.content;\n  Splitting(opts);\n  return parent.outerHTML\n}\n\nSplitting.html = html;\nSplitting.add = add;\n\nfunction detectGrid(el, options, side) {\n    var items = $(options.matching || el.children, el);\n    var c = {};\n\n    each(items, function(w) {\n        var val = Math.round(w[side]);\n        (c[val] || (c[val] = [])).push(w);\n    });\n\n    return Object.keys(c).map(Number).sort(byNumber).map(selectFrom(c));\n}\n\nfunction byNumber(a, b) {\n    return a - b;\n}\n\nvar linePlugin = createPlugin(\n    /*by: */ 'lines',\n    /*depends: */ [WORDS],\n    /*key: */ 'line',\n    /*split: */ function(el, options, ctx) {\n      return detectGrid(el, { matching: ctx[WORDS] }, 'offsetTop')\n    }\n);\n\nvar itemPlugin = createPlugin(\n    /*by: */ 'items',\n    /*depends: */ _,\n    /*key: */ 'item', \n    /*split: */ function(el, options) {\n        return $(options.matching || el.children, el)\n    }\n);\n\nvar rowPlugin = createPlugin(\n    /*by: */ 'rows',\n    /*depends: */ _,\n    /*key: */ 'row', \n    /*split: */ function(el, options) {\n        return detectGrid(el, options, \"offsetTop\");\n    }\n);\n\nvar columnPlugin = createPlugin(\n    /*by: */ 'cols',\n    /*depends: */ _,\n    /*key: */ \"col\", \n    /*split: */ function(el, options) {\n        return detectGrid(el, options, \"offsetLeft\");\n    }\n);\n\nvar gridPlugin = createPlugin(\n    /*by: */ 'grid',\n    /*depends: */ ['rows', 'cols']\n);\n\nvar LAYOUT = \"layout\";\n\nvar layoutPlugin = createPlugin(\n    /*by: */ LAYOUT,\n    /*depends: */ _,\n    /*key: */ _,\n    /*split: */ function(el, opts) {\n        // detect and set options\n        var rows =  opts.rows = +(opts.rows || getData(el, 'rows') || 1);\n        var columns = opts.columns = +(opts.columns || getData(el, 'columns') || 1);\n\n        // Seek out the first <img> if the value is true \n        opts.image = opts.image || getData(el, 'image') || el.currentSrc || el.src;\n        if (opts.image) {\n            var img = $(\"img\", el)[0];\n            opts.image = img && (img.currentSrc || img.src);\n        }\n\n        // add optional image to background\n        if (opts.image) {\n            setProperty(el, \"background-image\", \"url(\" + opts.image + \")\");\n        }\n\n        var totalCells = rows * columns;\n        var elements = [];\n\n        var container = createElement(_, \"cell-grid\");\n        while (totalCells--) {\n            // Create a span\n            var cell = createElement(container, \"cell\");\n            createElement(cell, \"cell-inner\");\n            elements.push(cell);\n        }\n\n        // Append elements back into the parent\n        appendChild(el, container);\n\n        return elements;\n    }\n);\n\nvar cellRowPlugin = createPlugin(\n    /*by: */ \"cellRows\",\n    /*depends: */ [LAYOUT],\n    /*key: */ \"row\",\n    /*split: */ function(el, opts, ctx) {\n        var rowCount = opts.rows;\n        var result = Array2D(rowCount);\n\n        each(ctx[LAYOUT], function(cell, i, src) {\n            result[Math.floor(i / (src.length / rowCount))].push(cell);\n        });\n\n        return result;\n    }\n);\n\nvar cellColumnPlugin = createPlugin(\n    /*by: */ \"cellColumns\",\n    /*depends: */ [LAYOUT],\n    /*key: */ \"col\",\n    /*split: */ function(el, opts, ctx) {\n        var columnCount = opts.columns;\n        var result = Array2D(columnCount);\n\n        each(ctx[LAYOUT], function(cell, i) {\n            result[i % columnCount].push(cell);\n        });\n\n        return result;\n    }\n);\n\nvar cellPlugin = createPlugin(\n    /*by: */ \"cells\",\n    /*depends: */ ['cellRows', 'cellColumns'],\n    /*key: */ \"cell\", \n    /*split: */ function(el, opt, ctx) { \n        // re-index the layout as the cells\n        return ctx[LAYOUT];\n    }\n);\n\n// install plugins\n// word/char plugins\nadd(wordPlugin);\nadd(charPlugin);\nadd(linePlugin);\n// grid plugins\nadd(itemPlugin);\nadd(rowPlugin);\nadd(columnPlugin);\nadd(gridPlugin);\n// cell-layout plugins\nadd(layoutPlugin);\nadd(cellRowPlugin);\nadd(cellColumnPlugin);\nadd(cellPlugin);\n\nreturn Splitting;\n\n})));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}